package  {		import flash.display.MovieClip;	import flash.geom.PerspectiveProjection;	import flash.display.Shape;	import com.greensock.TweenLite;	import flash.geom.Point;	import com.greensock.easing.Circ;	import com.greensock.easing.Linear;	import com.greensock.easing.Elastic;	import flash.display.Sprite;	import com.greensock.easing.Bounce;	import com.greensock.easing.Quad;			public class Test3D extends MovieClip {				private var _transitionContainer:Sprite = new Sprite();		private var _currentPane:Shape = new Shape();		private var _newPane:Shape = new Shape();		private var _reference:Shape = new Shape();				private var _pp:PerspectiveProjection = transform.perspectiveProjection;				public function Test3D() {			// constructor code			_pp.projectionCenter = new Point(((stage.stageWidth) / 2), ((stage.stageHeight) / 2));						_currentPane.graphics.clear();			_currentPane.graphics.beginFill(0x990000);			_currentPane.graphics.drawRect(-150, -150, 300, 300);			_currentPane.graphics.endFill();			_currentPane.graphics.lineStyle(1, 0x000000);			_currentPane.graphics.moveTo(-5, -5);			_currentPane.graphics.lineTo(5, 5);			_currentPane.graphics.moveTo(-5, 5);			_currentPane.graphics.lineTo(5, -5);						_newPane.graphics.clear();			_newPane.graphics.beginFill(0x990000);			_newPane.graphics.drawRect(-150, -150, 300, 300);			_newPane.graphics.endFill();			_newPane.graphics.lineStyle(1, 0x000000);			_newPane.graphics.moveTo(-5, -5);			_newPane.graphics.lineTo(5, 5);			_newPane.graphics.moveTo(-5, 5);			_newPane.graphics.lineTo(5, -5);/*			_reference.graphics.clear();			_reference.graphics.beginFill(0x000099);			_reference.graphics.drawRect(-150, -150, 300, 300);			_reference.graphics.endFill();*/			_reference.graphics.lineStyle(1, 0x00ff00);			_reference.graphics.moveTo(-5, -5);			_reference.graphics.lineTo(5, 5);			_reference.graphics.moveTo(-5, 5);			_reference.graphics.lineTo(5, -5);						_transitionContainer.x = (stage.stageWidth/2);			_transitionContainer.y = (stage.stageHeight/2);						// draw face 1			_currentPane.rotationY=0;			_currentPane.x = 0;			_currentPane.y = 0;			_currentPane.z = -150;			// draw face 2			_newPane.rotationY = 90;			_newPane.x = 150;			_newPane.y = 0;			_newPane.z = 0;						_transitionContainer.addChild(_currentPane);			_transitionContainer.addChild(_newPane);			_transitionContainer.addChild(_reference);			addChild(_transitionContainer);			transition();		}				private function transition():void{			_transitionContainer.swapChildren(_currentPane,_newPane);			_transitionContainer.z=100;			_transitionContainer.rotationY=0;			TweenLite.delayedCall(.25, swapDepths);			TweenLite.to(_transitionContainer, .5, {				rotationY:45, z:150, ease:Quad.easeIn, onComplete:function():void{					TweenLite.to(_transitionContainer, .5, { 						z:100, rotationY:90, ease:Quad.easeOut, onComplete:transition 					});				}			});		}				private function swapDepths():void{			_transitionContainer.swapChildren(_currentPane,_newPane);		}	}}