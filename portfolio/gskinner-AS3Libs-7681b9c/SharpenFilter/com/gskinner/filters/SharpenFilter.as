/*** SharpenFilter by Grant Skinner. Oct 4, 2005* AS3 version Apr 15, 2011* Visit www.gskinner.com/blog for documentation, updates and more free code.*** Copyright (c) 2011 Grant Skinner* * Permission is hereby granted, free of charge, to any person* obtaining a copy of this software and associated documentation* files (the "Software"), to deal in the Software without* restriction, including without limitation the rights to use,* copy, modify, merge, publish, distribute, sublicense, and/or sell* copies of the Software, and to permit persons to whom the* Software is furnished to do so, subject to the following* conditions:* * The above copyright notice and this permission notice shall be* included in all copies or substantial portions of the Software.* * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR* OTHER DEALINGS IN THE SOFTWARE.**/package com.gskinner.filters {	import flash.filters.ConvolutionFilter;		public class SharpenFilter extends ConvolutionFilter {	// Protected Properties:		protected var _amount:Number;			// Initialization:		/**		* Constructs a new SharpenFilter instance.		**/		public function SharpenFilter(amount:Number) {			super(3,3,[0,0,0,0,1,0,0,0,0],1);			this.amount = amount;		}			// Public getter / setters:		/**		* A number between 0 and 1 indicating the amount of sharpening to apply.		**/		public function set amount(amount:Number):void {			_amount = amount;			var a:Number = amount/-1;			var b:Number = amount/-2;			var c:Number = a*-4+b*-4+1;			matrix = [b,a,b,					  a,c,a,					  b,a,b];		}		public function get amount():Number { return _amount; }			}	}